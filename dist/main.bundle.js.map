{"version":3,"sources":["webpack:///./src/app/process.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Http, Response , RequestOptions, URLSearchParams} from '@angular/http';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n@Injectable()\r\nexport class ProcessService {\r\n    private _processUrl = 'https://file-upload-check.herokuapp.com/process';\r\n\r\n    constructor(private _http: Http) { }\r\n\r\n    hackCheck(search,filename): Observable<string[]> {\r\n        \r\n        let params: URLSearchParams = new URLSearchParams();\r\n        params.set('var1', search);\r\n        params.set('fname',filename);\r\n\r\n        let requestOptions = new RequestOptions();\r\n        requestOptions.search = params;\r\n\r\n        return this._http.get(this._processUrl,requestOptions)\r\n            .map((response: Response) => <string[]> response.json())\r\n            .do(data => console.log('All: ' +  JSON.stringify(data)))\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: Response) {\r\n        // in a real world app, we may send the server to some remote logging infrastructure\r\n        // instead of just logging it to the console\r\n        console.error(error);\r\n        return Observable.throw(error.json().error || 'Server error');\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/process.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 411;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 411\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit, DoCheck} from '@angular/core';\nimport { FileSelectDirective, FileUploader } from 'ng2-file-upload';\nimport { ProcessService } from './process.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements DoCheck {\n  lines: string[] = [];\n  str1:string;\n  str2:string;\n  str3:string;\n  search:string[] = [];\n  fname: string;\n  nofilter: boolean = false;\n  isText: boolean = true;\n\n  public uploader:FileUploader = new FileUploader({url: 'https://file-upload-check.herokuapp.com/upload'});\n\n  getfilename():void{\n    this.fname = this.uploader.queue[0]._file.name;\n    let temp = this.fname.split('.');\n    let ext = temp.length;\n    if(temp[ext-1] !== 'txt')\n    {\n      this.isText = false;\n    }\n    else{\n      this.isText = true;\n      this.uploader.uploadAll();\n    }\n    this.uploader.queue.pop();\n  };\n\n    constructor(private _processService: ProcessService) {\n\n    };\n        \n    ngDoCheck(): void {\n      if(!this.str1 && !this.str2 && !this.str3)\n      {\n        this.nofilter = false;\n      }\n      else\n      {\n        this.nofilter = true;\n      }\n    }\n\n    check(): void {\n        this.search.push(this.str1);\n        this.search.push(this.str2);\n        this.search.push(this.str3);\n            this._processService.hackCheck(this.search,this.fname)\n                .subscribe(lines => this.lines = lines);\n            this.search = [];\n\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport {FileUploadModule} from \"ng2-file-upload\";\nimport { ProcessService } from './process.service';\n\nimport 'hammerjs';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule,\n    FileUploadModule\n  ],\n  providers: [ProcessService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 615\n// module chunks = 1","module.exports = \"<div class=\\\"container\\\">\\r\\n\\r\\n    <div class=\\\"navbar navbar-default\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a class=\\\"navbar-brand\\\" href>Angular2 File Upload and string search</a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <h3>Select files</h3>\\r\\n\\r\\n            <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n            <div>\\r\\n                <div>\\r\\n                    <div class=\\\" progress \\\" style=\\\" \\\">\\r\\n                        <div class=\\\"progress-bar \\\" role=\\\"progressbar \\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' } \\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button type=\\\"button \\\" class=\\\"btn btn-success btn-s \\\" (click)=\\\"getfilename()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-upload \\\"></span> Upload\\r\\n                </button>\\r\\n                <div [hidden]='isText'>\\r\\n                    Please upload a text file!!!\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-9 \\\">\\r\\n            <h3>Select search strings</h3>\\r\\n            <div class=\\\"input-group \\\">\\r\\n                <span class=\\\"input-group-addon \\\">string1</span>\\r\\n                <input type=\\\"text \\\" class=\\\"form-control \\\" [(ngModel)]=' str1 '>\\r\\n            </div>\\r\\n            <div class=\\\"input-group \\\">\\r\\n                <span class=\\\"input-group-addon \\\">string2</span>\\r\\n                <input type=\\\"text \\\" class=\\\"form-control \\\" [(ngModel)]='str2 '>\\r\\n            </div>\\r\\n            <div class=\\\"input-group \\\">\\r\\n                <span class=\\\"input-group-addon \\\">string3</span>\\r\\n                <input type=\\\"text \\\" class=\\\"form-control \\\" [(ngModel)]='str3 '>\\r\\n            </div>\\r\\n            <button type=\\\"button \\\" class=\\\"btn btn-warning btn-s \\\" (click)=\\\"check() \\\" [disabled]=\\\"!nofilter\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-search \\\"></span> Search\\r\\n                </button>\\r\\n            <table class=' table ' *ngIf='lines && lines.length '>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <th>Hack log</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor='let row of lines '>\\r\\n                        <td>\\r\\n                            {{row}}\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 621\n// module chunks = 1"],"sourceRoot":""}